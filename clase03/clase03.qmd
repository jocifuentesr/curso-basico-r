## Factores 
```{r}
factores <- factor(rep(c("A", "B", "C"), 5))
factores
```
```{r}
factores_num <- factor(rep(c(2, 3), 3))
factores_num
```
```{r}
factores
factores[1] <- 'D'
factores
```
Mostrar los niveles de un factor

```{r}
levels(factores)[4] <- "D"
levels(factores)

```
```{r}
factores
factores[1] <- 'D'
```
# Data frames
```{r}
Nombre <- c("Ana", "Juan", "Claudia")
Edad <- c(45, 52, 26)
Peso <- c(64, 75, 67)
```

Con los vectores creamos el Data Frame
```{r}
df <- data.frame(Nombre, Edad, Peso)
df

```

```{r}
class(df)
```

```{r}
colnames(df)
```
```{r}
rownames(df)
```
Muestra la estructura del dataframe
```{r}
str(df)
```

## Acceder a los elementos del dataframe
```{r}
df[1]
```
```{r}
df["Nombre"]
```

Otra forma 
```{r}
df$Nombre
```
Extraer un vector de un data frame
```{r}
df_nuevo <- df["Edad"]
class(df_nuevo)
df_nuevo
```
Extraer "Nombre" y "Peso"
```{r}
df[c(1, 3)]
```

Lo mismo con la etiqueta de la variable
```{r}
df[c("Nombre", "Peso")]
```

Agregar una columna
```{r}
df <- cbind(df, Casado = c('Si', 'Si', 'No'))
df
```

Acceder a los dos primeras filas
```{r}
df[1:2, ]
```

Algo un poco más complejo
```{r}
df[1:3, c("Nombre", "Peso")]
```
Buscar condiciones 
```{r}
df[df$Edad < 30 & df$Casado == 'No', ]
```
## Modificar los valores de un data frame
Agregar un tipo de contrato
```{r}
df$Tipo_Contrato <- c("Premium", "Basico", "Basico")
df
```
Transformar la variable Tipo_contrato a un factor
```{r}
class(as.factor(df$Tipo_Contrato))
```

Eliminar una variable
```{r}
df$Peso <- NULL
```
```{r}
df
```
Nombres de las columnas
```{r}
colnames(df)
```
```{r}
fila <- data.frame(Nombre = 'Paula', Edad = 45, Casado = 'Si', Tipo_Contrato = 'Premium')
fila

```
Agregamos la fila 
```{r}
df <- rbind(df, fila)
```
```{r}
df
```

Volvemos a agregar la variable Peso
```{r}
Peso <- c(60, 82, 92, 55)
df <- cbind(df, Peso)
df

```
## Tuberías (Pipe)
Los tidy data
```{r}
df_notd <- data.frame(Year=c(2015, 2016, 2017, 2018, 2019), Maria=c(55, 60, 57, 65, 70), Pepe=c(75, 80, 100, 110, 85), Paco = c(70, 72, 71, 70, 80))
df_notd
```
Otra forma de observar los datos
```{r}

df_wide<- data.frame(Nombre=c("Maria", "Pepe", "Paco"),
                     Year_2015=c(55, 75, 70), 
                     Year_2016=c(60, 80, 72),
                     Year_2017=c(57, 100, 71),
                     Year_2018=c(65, 110, 70),
                     Year_2019=c(70, 85, 80))
df_wide
```

## Tidyverse
```{r}
library(dplyr)
library(tidyr)
```
Aplicar una tubería para pasar de un tipo de dato ancho a un tidy 
```{r}
df_long <- df_wide %>% gather("Year", "Peso", 2:6)
df_long
```
Aplicamos el inverso
```{r}
df_long %>% spread("Year", "Peso")

```
## Operadores lógicos 
```{r}
x <- 10
x > 7 & x > 20
```

```{r}
!TRUE
```
```{r}
!is.numeric(5)
```
